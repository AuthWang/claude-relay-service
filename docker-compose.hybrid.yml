# Docker Compose 配置 - 混合存储架构 (Redis + PostgreSQL)
#
# 此配置文件展示了 Claude Relay Service 的完整混合存储部署
# 包含：Redis、PostgreSQL、应用服务和监控工具

version: '3.8'

services:
  # === 数据库服务 ===

  # Redis 缓存数据库
  redis:
    image: redis:7-alpine
    container_name: claude-relay-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - claude-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # PostgreSQL 主数据库
  postgres:
    image: postgres:15-alpine
    container_name: claude-relay-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    environment:
      - POSTGRES_DB=claude_relay
      - POSTGRES_USER=claude_user
      - POSTGRES_PASSWORD=claude_secure_password_2024
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    networks:
      - claude-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U claude_user -d claude_relay"]
      interval: 10s
      timeout: 3s
      retries: 3

  # === 应用服务 ===

  # Claude Relay Service 主应用
  claude-relay:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: claude-relay-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      # 服务器配置
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0

      # 安全配置
      - JWT_SECRET=claude_relay_jwt_secret_2024_very_secure
      - ENCRYPTION_KEY=claude_relay_encryption_key_32chars

      # Redis 配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0

      # PostgreSQL 配置
      - POSTGRES_ENABLED=true
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=claude_relay
      - POSTGRES_USER=claude_user
      - POSTGRES_PASSWORD=claude_secure_password_2024

      # 连接池配置
      - POSTGRES_POOL_MAX=20
      - POSTGRES_POOL_MIN=5
      - POSTGRES_POOL_IDLE_TIMEOUT=30000
      - POSTGRES_POOL_CONNECT_TIMEOUT=60000

      # 混合数据库配置
      - DATABASE_STRATEGY=dual_write
      - CACHE_API_KEY_TTL=86400
      - CACHE_SESSION_TTL=1800
      - CACHE_USAGE_STATS_TTL=300

      # 数据同步配置
      - DATABASE_SYNC_ENABLED=true
      - DATABASE_SYNC_INTERVAL=3600000
      - DATABASE_SYNC_ON_STARTUP=true

      # 日志配置
      - LOG_LEVEL=info
    networks:
      - claude-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # === 监控服务 (可选) ===

  # Redis Insight - Redis 监控工具
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: claude-relay-redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - claude-network
    profiles:
      - monitoring

  # pgAdmin - PostgreSQL 管理工具
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: claude-relay-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@claude-relay.local
      - PGADMIN_DEFAULT_PASSWORD=pgadmin_password_2024
      - PGADMIN_CONFIG_SERVER_MODE=False
    networks:
      - claude-network
    profiles:
      - monitoring

  # Grafana - 监控仪表板
  grafana:
    image: grafana/grafana:latest
    container_name: claude-relay-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafana_admin_2024
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - claude-network
    profiles:
      - monitoring

# === 网络配置 ===
networks:
  claude-network:
    driver: bridge
    name: claude-relay-network

# === 数据卷配置 ===
volumes:
  # 数据库数据卷
  redis_data:
    driver: local
    name: claude-relay-redis-data
  postgres_data:
    driver: local
    name: claude-relay-postgres-data

  # 监控工具数据卷
  redis_insight_data:
    driver: local
    name: claude-relay-redis-insight
  pgadmin_data:
    driver: local
    name: claude-relay-pgadmin
  grafana_data:
    driver: local
    name: claude-relay-grafana

# === 使用说明 ===
#
# 基础部署 (仅应用和数据库):
#   docker-compose -f docker-compose.hybrid.yml up -d
#
# 包含监控工具的完整部署:
#   docker-compose -f docker-compose.hybrid.yml --profile monitoring up -d
#
# 查看服务状态:
#   docker-compose -f docker-compose.hybrid.yml ps
#
# 查看日志:
#   docker-compose -f docker-compose.hybrid.yml logs -f claude-relay
#
# 停止服务:
#   docker-compose -f docker-compose.hybrid.yml down
#
# 完全清理 (删除数据卷):
#   docker-compose -f docker-compose.hybrid.yml down -v
#
# === 访问地址 ===
#
# Claude Relay Service: http://localhost:3000
# Redis Insight:        http://localhost:8001  (需要 --profile monitoring)
# pgAdmin:              http://localhost:5050  (需要 --profile monitoring)
# Grafana:              http://localhost:3001  (需要 --profile monitoring)
#
# === 数据库连接信息 ===
#
# PostgreSQL:
#   Host: localhost (外部) / postgres (容器内)
#   Port: 5432
#   Database: claude_relay
#   Username: claude_user
#   Password: claude_secure_password_2024
#
# Redis:
#   Host: localhost (外部) / redis (容器内)
#   Port: 6379
#   Database: 0
#   Password: (无)